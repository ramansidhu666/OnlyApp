@model CommunicationApp.Models.CustomerModel

@{
    ViewBag.Title = "User";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}


<script type="text/javascript" src="~/assets/plugins/jquery-2.1.1.min.js"></script>
<script type="text/javascript" src="~/Scripts/jquery-ui-1.10.4.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#btnSubmit').click(function () {
            if ($('#fileToUpload').val() == "") {
                if ($('#LogoPath').val() == "") {
                    $("#spanfile").html("Please upload file");
                    return false;
                }
            }
            else {
                return checkfile();
            }
        });

        //get file path from client system
        function getNameFromPath(strFilepath) {

            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            }
            else {
                return strName[0];
            }

        }
        //get file size
        function GetFileSize(fileid) {
            try {
                var fileSize = 0;
                // Detecting IE
                var isIE = false;
                if ($('html').is('.ie ie7, .ie ie8, .ie ie9, .ie ie10')) {
                    isIE = true;
                    //alert("IE");
                }

                if (isIE) {
                    //before making an object of ActiveXObject,
                    //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject"); var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    fileSize = fileSize / 1048576; //size in mb
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#" + fileid)[0].files[0].size //size in kb
                    fileSize = fileSize / 1048576; //size in mb
                }

                // alert("Uploaded File Size is" + fileSize + "MB");
                return fileSize;
            }
            catch (e) {
                alert("Error is :" + e);
            }
        }
        function checkfile() {
            var file = getNameFromPath($("#fileToUpload").val());
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                //alert(extension);
                switch (extension) {
                    case 'jpg':
                    case 'png':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }
            if (flag == false) {
                $("#spanfile").html("You can upload only jpg, png extension file");
                return false;

            }
            else {
                var size = GetFileSize('fileToUpload');
                if (size > 3) {
                    $("#spanfile").html("You can upload file up to 3 MB");
                    return false;
                }
                else {
                    $("#spanfile").html("");
                }
            }
        }
        $(function () {
            $("#fileToUpload").change(function () {
                checkfile();
            });

        });

    });


    function showimagepreview(input) {
        debugger;
        if (input.files && input.files[0]) {
            var filerdr = new FileReader();
            filerdr.onload = function (e) {
                $('#imgprvw').attr('src', e.target.result);
            }
            filerdr.readAsDataURL(input.files[0]);
        }
    }
</script>
@{Html.RenderAction("DisplayMessage", "Base", new { ShowMessage = TempData["ShowMessage"], MessageBody = @TempData["MessageBody"] });}
@using (Html.BeginForm("Edit", "Property", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.CityID)
    @Html.HiddenFor(model => model.ZipCode)
    @Html.HiddenFor(model => model.CustomerId)
    @Html.HiddenFor(model => model.UserId)
    @*@Html.HiddenFor(model => model.UserId)*@
    <div class="row">
        <div class="col-md-12">
            <div class="sky-form boxed margin-top10">
                <header>User</header>
                @Html.ValidationSummary(true)
                <fieldset>
                    <div class="row">

                        <div class="row">
                            <section class="col col-md-3">
                                @*<label for="PhotoPath" class="label-required">Photo<span class="required">*</span></label>*@
                                @if ((@Model.PhotoPath != "") && (@Model.PhotoPath != null))
                                {
                                    <img id="imgprvw" alt="Avatar" src="@Url.Content(Model.PhotoPath)" height="120" width="120" />
                                }
                                Upload Image
                                <input type="file" name="file" id="ImageUpload" onchange="showimagepreview(this)" />
                                @*<label for="fileToUpload" class="input input-file">
                                    </label>*@

                            </section>

                            <section style="display:none" class="col col-md-4">
                                <div class="button"><input type="file" id="fileToUpload" onchange="this.parentNode.nextSibling.value = this.value" name="file">Browse</div>
                                <span style="color:red;"></span><span id="spanfile" class="field-validation-error"></span>
                            </section>

                        </div>

                    </div>
                    <div class="row">
                        <section class="col col-md-3">
                            @Html.LabelForRequired(model => model.FirstName)
                            <label class="input">
                                @Html.TextBoxFor(model => model.FirstName)
                                @Html.ValidationMessageFor(model => model.FirstName)
                            </label>
                        </section>
                        
                        <section class="col col-lg-3">
                            @Html.LabelFor(model => model.MiddleName)
                            <label class="input ">
                                @Html.TextBoxFor(model => model.MiddleName)
                                @*@Html.ValidationMessageFor(model => model.TrebId)*@
                            </label>
                        </section>
                    </div>
                    <div class="row">
                        <section class="col col-md-3">

                            @Html.LabelForRequired(model => model.LastName)
                            <label class="input">
                                @Html.TextBoxFor(model => model.LastName)
                                @Html.ValidationMessageFor(model => model.LastName)
                            </label>
                        </section>
                        <section class="col col-lg-3">
                            @Html.LabelForRequired(model => model.TrebId)
                            <label class="input DivCover">
                                @Html.TextBoxFor(model => model.TrebId, new { @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.TrebId)
                            </label>
                        </section>
                        
                        @*<section class="col col-lg-9"></section>*@
                    </div>
                    <div class="row">
                        <section class="col col-lg-6">

                            @Html.LabelFor(model => model.WebsiteUrl)
                            <label class="input">
                                @Html.TextBoxFor(model => model.WebsiteUrl)
                                @*@Html.ValidationMessageFor(model => model.WebsiteUrl)*@
                            </label>
                        </section>
                        <section class="col col-lg-6"></section>
                    </div>
                    @*<div class="row">
                        <section class="col col-md-6">

                            @Html.LabelForRequired(model => model.Address)
                            <label class="textarea">
                                @Html.TextAreaFor(model => model.Address)
                                @Html.ValidationMessageFor(model => model.Address)
                            </label>
                        </section>
                    </div>*@

                    <div class="row">
                        <section class="col col-md-3">

                            @Html.LabelForRequired(model => model.EmailID)
                            <label class="input">
                                @Html.TextBoxFor(model => model.EmailID)
                                @Html.ValidationMessageFor(model => model.EmailID)
                            </label>
                        </section>



                    </div>
                    <div class="row">
                        <section class="col col-md-3">

                            @Html.LabelFor(model => model.MobileNo)
                            <label class="input">
                                @Html.TextBoxFor(model => model.MobileNo)
                                @Html.ValidationMessageFor(model => model.MobileNo)
                            </label>
                        </section>
                    </div>
                    <div class="row">
                        <section class="col col-md-3">

                            @Html.LabelFor(model => model.IsActive)
                            <label class="check-square padding-top30">
                                @Html.CheckBoxFor(model => model.IsActive)
                                @Html.ValidationMessageFor(model => model.IsActive)
                            </label>
                        </section>
                    </div>
                </fieldset>
                <footer>
                    <input type="submit" value="Update" class="bigButton" id="btnSubmit" />
                </footer>
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Back to List", "customerlist")
</div>
