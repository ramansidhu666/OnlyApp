@model CommunicationApp.Models.MessageModel

@{
    ViewBag.Title = "Message";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}
<script src="~/Scripts/jquery.MultiFile.js"></script>



<script>
    $('div').on('click', '.closeDiv', function () {
        debugger;
        $(this).prev().remove();
        $(this).remove();
        $('#files').val("");
    });
    window.onload = function () {
       
        //Check File API support
        if (window.File && window.FileList && window.FileReader) {
            var filesInput = document.getElementById("files");

            filesInput.addEventListener("change", function (event) {

                var files = event.target.files; //FileList object
                var output = document.getElementById("result");

                for (var i = 0; i < files.length; i++) {
                    var file = files[i];

                    //Only pics
                    if (!file.type.match('image'))
                        continue;

                    var picReader = new FileReader();

                    picReader.addEventListener("load", function (event) {

                        var picFile = event.target;

                        var div = document.createElement("div");
                        div.className = "foo";
                        div.innerHTML = "<img data-id='img_" + picFile.result + "' class='thumbnail' src='" + picFile.result + "'" +
                                "title='" + picFile.name + "'/>";
                        var Childdiv = document.createElement("div");
                        Childdiv.innerHTML = "X";
                        Childdiv.setAttribute('class', 'closeDiv');
                        Childdiv.setAttribute('data-id', picFile.name);
                        div.appendChild(Childdiv)
                        output.insertBefore(div, null);

                    });

                    //Read the image
                    picReader.readAsDataURL(file);
                }

            });
        }
        else {
            console.log("Your browser does not support File API");
        }



        $("#MessageImageDiv").css('display', 'none')
        $('.chosen-select').chosen({ no_results_text: 'Oops, nothing found!' });
        $('#All').click(function () {
            if ($('#SelectedCustomer_chosen').hasClass('DivCover')) {
                $('#SelectedCustomer_chosen').removeClass('DivCover');
            } else {
                $('#SelectedCustomer_chosen').removeClass('DivCover');
                $('#SelectedCustomer_chosen').addClass('DivCover');
            }

        });
        $('#SelectedCustomer_chosen').click(function () {

            $('#All').attr("disabled", true);
        });

        $('#IsWithImage').click(function () {
            debugger;
            if ($("#IsWithImage").prop('checked') == true) {
                debugger;
                $("#MessageImageDiv").css('display', 'block')
            }
            else {
                debugger;
                $("#MessageImageDiv").css('display', 'none')
            }
        }
   )

       
        //$('.deleteThumnail').click(function () {
        //    alert('thumnail');
       
        //    var DeleteThumnail = $(this).data("id");
        //    var ImgSrc = $(this).data("img_" + DeleteThumnail);
        //    alert(ImgSrc);
        //})
    }


</script>

@{Html.RenderAction("DisplayMessage", "Base", new { ShowMessage = TempData["ShowMessage"], MessageBody = @TempData["MessageBody"] });}
@using (Html.BeginForm("Create", "Message", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)


    @Html.HiddenFor(model => model.MessageId)
    <div class="row">
        <div class="col-md-12">
            <div class="sky-form boxed margin-top10">
                <header>Message</header>
                <fieldset>
                    <div class="row">
                        <section class="col col-md-3">
                            @Html.LabelForRequired(model => model.Heading)
                            <label class="input">
                                @Html.TextBoxFor(model => model.Heading)
                                @Html.ValidationMessageFor(model => model.Heading)
                            </label>
                        </section>
                    </div>
                    <div class="row">
                        <section class="col col-md-3">
                            @Html.LabelForRequired(model => model.Messages)
                            <label class="input">
                                @Html.TextAreaFor(model => model.Messages, new { @style = "height:200px; width:330px" })
                                @Html.ValidationMessageFor(model => model.Messages)
                            </label>
                        </section>
                    </div>
                    <div class="row">
                        <section class="col col-md-3">
                            @Html.LabelForRequired(model => model.IsWithImage)
                            <label>
                                @Html.CheckBoxFor(model => model.IsWithImage)
                                @Html.ValidationMessageFor(model => model.IsWithImage)
                            </label>
                        </section>
                    </div>
                    <div class="row" id="MessageImageDiv">

                        <label for="files">Select multiple files: </label>
                        @*<input id="files" name="files" type="file" multiple />*@
                        <input id="files" name="files" type="file" class="multi" />
                        @*<output id="result" />*@


                    </div>
                    <div class="row">

                        <section class="col col-md-3">
                            @Html.LabelFor(model => model.SelectedCustomer)
                            <label class="input">
                                @Html.ListBoxFor(m => m.SelectedCustomer, Model.CustomersList, new { @class = "chosen-select", data_placeholder = "Select Users" })
                            </label>
                        </section>

                    </div>
                    <div id="AllDiv">

                        @Html.CheckBoxFor(model => model.All)
                        <label>All</label>

                    </div>
                </fieldset>
                <footer>
                    <input type="submit" value="Save Message" class="bigButton" id="btnSubmit" />
                </footer>
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Back to List", "index")
</div>

